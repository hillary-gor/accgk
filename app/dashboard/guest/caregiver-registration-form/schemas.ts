import { z } from "zod";

// Zod schema for validation
export const caregiverSchema = z.object({
  national_id_number: z.string().min(5, "Enter valid ID number"),
  alt_id_type: z.string().optional(),
  has_birth_certificate: z.boolean(),
  has_passport: z.boolean(),
  date_of_birth: z.string(),
  gender: z.string(),
  county_of_residence: z.string(),
  sub_county_or_constituency: z.string(),
  exact_location: z.string().min(2),
  emergency_contact_name: z.string().min(2),
  emergency_contact_phone: z.string().min(5),
  emergency_contact_relationship: z.string().min(2),
  next_of_kin_name: z.string().min(2),
  next_of_kin_phone: z.string().min(5),
  next_of_kin_relationship: z.string().min(2),
  next_of_kin_location: z.string(),
  highest_qualification: z.string(),
  caregiving_certification: z.string().nullable().optional(),
  training_institution_name: z.string().nullable().optional(),
  training_completion_year: z.string().nullable().optional(),
  has_bls_certification: z.boolean(),
  other_relevant_trainings: z.string().nullable().optional(),
  years_of_experience: z.number().optional(),
  current_employment_status: z.string().nullable().optional(),
  last_employer_name: z.string().nullable().optional(),
  last_job_title: z.string().nullable().optional(),
  work_experience_description: z.string().nullable().optional(),
  specialized_skills: z.array(z.string()).nullable(),
  language_proficiency: z.array(z.string()).nullable(),
  preferred_work_environment: z.string().nullable().optional(),
  willing_to_work_nights_or_weekends: z.boolean(),
  has_criminal_record: z.boolean(),
  willing_to_provide_references: z.boolean(),
  reference_1_name: z.string().nullable().optional(),
  reference_1_relationship: z.string().nullable().optional(),
  reference_1_contact: z.string().nullable().optional(),
  reference_2_name: z.string().nullable().optional(),
  reference_2_relationship: z.string().nullable().optional(),
  reference_2_contact: z.string().nullable().optional(),
  why_caregiving: z.string().nullable().optional(),
  career_goals: z.string().nullable().optional(),
  personal_strengths: z.string().nullable().optional(),
  relevant_volunteer_experience: z.string().nullable().optional(),
  is_physically_able: z.boolean(),
  vaccination_status: z.string().nullable().optional(),
  religious_affiliation: z.string().nullable().optional(),
  whatsapp_number: z.string().nullable().optional(),
  preferred_contact_method: z.string().nullable().optional(),
});

// Type inferred from schema
export type CaregiverFormData = z.infer<typeof caregiverSchema>;
